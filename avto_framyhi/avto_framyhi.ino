#include <EEPROM.h>
#include <LCD_1602_RUS.h>
#include <OneWire.h>
#include <Wire.h>
#include <DallasTemperature.h>
#include <GyverTimers.h> 

#define keyDown  A2    //
#define keySelect  A1  // КНОПКИ
#define keyUp   A0     //

#define ZERO_PIN 2     // ПИН ДЕТЕКТОРА НОЛЯ
#define INT_NUM 0      // НОМЕР ДЕТЕКТОРА НУЛЯ

#define DIMMER_PIN1 11 // ПЕРВЫЙ ДИМИРУЮЩИЙ ПИН
#define DIMMER_PIN2 12 // ВТОРОЙ ДИМИРУЮЩИЙ ПИН

#define PIN_TRIG 12    // ПИН 
#define PIN_ECHO 11    // ПИН ЕХОЛОКАЦИИ

#define rele1 3        //  ПИНЫ
#define rele2 4        // ФРАМУГ 

#define ow=7;                        //
OneWire oneWire(ow);                 //  ДАТЧИК DS18B20
DallasTemperature sensors(&oneWire); //

LCD_1602_RUS lcd(0x27, 16, 2);       //  ЕКРАН

long timetem=millis(),currentMillis=millis(),storonatimer=millis(),Millis=millis();
int witetemp=2000, temp, settemp=22,  loopTime=4000, waitbatton=500,stoped=15,ran=15,maximym=0,minimym=0;
byte regim=1,storona=0,l=1,g=0,perehod=0, waterreg;
float tempu,tempk;
int dimmer1, dimer1, dimmer2, dimer2, water;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void setup() {                              //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EEPROM.get(10,regim);                       //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EEPROM.get(20,settemp);                     //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EEPROM.get(30,stoped);                      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EEPROM.get(40,ran);                         //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EEPROM.get(50,maximym);                     //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EEPROM.get(60,minimym);                     //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EEPROM.get(70,dimer1);                      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EEPROM.get(80,dimer2);                      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EEPROM.get(90,water);                       //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode( rele1, OUTPUT);                    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
digitalWrite(rele1, l);                     //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode( rele2, OUTPUT);                    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
digitalWrite(rele2, l);                     //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode( 9, OUTPUT);                        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
digitalWrite(9, l);                         //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode(ZERO_PIN, INPUT_PULLUP);            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode(DIMMER_PIN1, OUTPUT);               //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode(DIMMER_PIN2, OUTPUT);               //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
attachInterrupt(INT_NUM, isr, RISING);      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Timer2.enableISR();                         //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Timer1.enableISR();                         //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode( keyUp, INPUT);                     //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
digitalWrite(keyUp, HIGH);                  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode(keySelect, INPUT);                  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
digitalWrite(keySelect, HIGH);              //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode(keyDown, INPUT);                    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
digitalWrite(keyDown, HIGH);                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pinMode(ow,INPUT);  // - DS18B20            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
lcd.init();                                 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
lcd.backlight();                            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
lcd.clear();                                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
sensors.setWaitForConversion(false);        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
sensors.setResolution(0, 12);               //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}                                           //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void onrele(){
if(storona==0){digitalWrite(rele2, l);digitalWrite(rele1, l);}
if(storona==2){digitalWrite(rele2, g);digitalWrite(rele1, l);}
if(storona==1){digitalWrite(rele2, l);digitalWrite(rele1, g);}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void avtomat(){
  if(regim==1){
if (millis()-Millis>stoped*1000 && perehod==0){
if (settemp-temp>=1) {storona=1;}
if (settemp-temp<=-1){storona=2;}
perehod=1;
Millis=millis();
}
if (millis()-Millis>ran*1000 && (perehod==1 || perehod==2)){
storona=0;
perehod=0;
Millis=millis();
}}}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void isr() { 
  static int lastDim1,lastDim2;
  digitalWrite(DIMMER_PIN1, 0);  // выключаем симистор
  digitalWrite(DIMMER_PIN2, 0);  // выключаем симистор
  // если значение изменилось, устанавливаем новый период
  // если нет, то просто перезапускаем со старым
  if (lastDim2 != dimmer2) Timer2.setPeriod(lastDim2 = dimmer2);
  else Timer2.restart();
  if (lastDim1 != dimmer1) Timer1.setPeriod(lastDim1 = dimmer1);
  else Timer1.restart();
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void rychn(){
  if(regim==0){
if (millis()-storonatimer>=waitbatton && storona==0){
if (analogRead(keyDown) < 100&&(storona==2||storona==0 )) {storona=1;storonatimer = millis();} 
if (analogRead(keyUp)   < 100&&(storona==1||storona==0 )) {storona=2;storonatimer = millis();}
}
if (millis()-storonatimer>=waitbatton && storona>0){
if (analogRead(keyDown) < 100 ) {storona=0;storonatimer = millis();} 
if (analogRead(keyUp)   < 100 ) {storona=0;storonatimer = millis();}
}}}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void glavnoe(){
///////////////////////
lcd.setCursor(0,0);lcd.print(L"Tз{");lcd.print(settemp);lcd.setCursor(5,0);lcd.print(L"} T");lcd.print(L"В");lcd.print(maximym);lcd.setCursor(14,0);lcd.print(dimer1);
lcd.setCursor(0,1);lcd.print(L"Tn ");lcd.print(temp);   lcd.setCursor(7,1);lcd.print(L"T");lcd.print(L"Н");lcd.print(minimym);lcd.setCursor(14,1);lcd.print(dimer2);
///////////////////////
if(temp<=9){lcd.setCursor(4,1);lcd.print(L" ");}
if(storona==0){lcd.setCursor(2,1);lcd.print(L" ");      lcd.setCursor(5,1);lcd.print(L" ");}
if(storona==1){lcd.setCursor(2,1);lcd.print(L"\x7F");   lcd.setCursor(5,1);lcd.print(L" ");}
if(storona==2){lcd.setCursor(2,1);lcd.print(L" ");      lcd.setCursor(5,1);lcd.print(L"\x7E"); }
if(-1<maximym && maximym<10){lcd.setCursor(10,0);lcd.print(L" ");}
if(-1<minimym && minimym<10){lcd.setCursor(10,1);lcd.print(L" ");}
if(regim==1){lcd.setCursor(12,0);lcd.print(L"A");lcd.setCursor(12,1);lcd.print(L"B");}else{lcd.setCursor(12,0);lcd.print(L"Р");lcd.setCursor(12,1);lcd.print(L"Ч");}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
ISR(TIMER2_A) {
  digitalWrite(DIMMER_PIN2, 1);  
  Timer2.stop();                
}
ISR(TIMER1_A) {
  digitalWrite(DIMMER_PIN1, 1);  
  Timer1.stop();                
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void menu(){
if (analogRead(keySelect)< 100) { 
lcd.clear();
lcd.setCursor(0, 0);lcd.print(L"SET");
currentMillis = millis();
    while(millis()-currentMillis<=loopTime)
     {
      lcd.setCursor(3, 0); lcd.print(settemp);
      delay(100);
      if (analogRead(keyDown) < 100 ) { settemp--;currentMillis = millis(); } 
      if (analogRead(keyUp)   < 100 ) { settemp++;currentMillis = millis(); }
      if (analogRead(keySelect)< 100) { currentMillis = 0;}
     }
     EEPROM.put(20,settemp);
     delay(300);
     lcd.setCursor(0, 0);lcd.print(L"SET");
currentMillis = millis();
 lcd.setCursor(6, 0); lcd.print(L"СБРОС");
    while(millis()-currentMillis<=loopTime)
     {
      
      delay(100);
      if (analogRead(keyDown) < 100 ) { minimym=tempu;maximym=tempu;lcd.setCursor(6, 0); lcd.print(L" ОК  "); } 
      if (analogRead(keyUp)   < 100 ) { minimym=tempu;maximym=tempu;lcd.setCursor(6, 0); lcd.print(L" ОК  "); }
      if (analogRead(keySelect)< 100) { currentMillis = 0;}
     EEPROM.put(50,maximym);
     EEPROM.put(60,minimym);
     }
     
     delay(300);
currentMillis = millis();
    while(millis()-currentMillis<=loopTime)
     {
      
      if (analogRead(keyDown) < 100 ) { regim--;if (regim<0){regim=1;}currentMillis = millis();delay(300); } 
      if (analogRead(keyUp)   < 100 ) { regim++;if (regim>1){regim=0;}currentMillis = millis();delay(300); }
      if (analogRead(keySelect)< 100) { currentMillis = 0;}
      
     if(regim==1){ lcd.setCursor(12, 0); lcd.print(L"ABTO");}else{ lcd.setCursor(12, 0); lcd.print(L"РУЧН");}
     }
     EEPROM.put(10,regim);
     delay(300);
     currentMillis = millis();
     lcd.setCursor(0, 1);lcd.print(L"stop");
currentMillis = millis();
    while(millis()-currentMillis<=loopTime)
     {
      lcd.setCursor(4, 1); lcd.print(stoped);
      delay(100);
      if (analogRead(keyDown) < 100 ) { stoped--;currentMillis = millis();if (stoped<=9){lcd.setCursor(5, 1); lcd.print(L" ");}if (stoped<=0){stoped=0;} } 
      if (analogRead(keyUp)   < 100 ) { stoped++;currentMillis = millis();if (stoped>=32){stoped=32;} }
      if (analogRead(keySelect)< 100) { currentMillis = 0;}
     }
     EEPROM.put(30,stoped);
     delay(300);
currentMillis = millis();
lcd.setCursor(11, 1);lcd.print(L"ran");
currentMillis = millis();
    while(millis()-currentMillis<=loopTime)
     {
      lcd.setCursor(14, 1); lcd.print(ran);
      delay(100);
      if (analogRead(keyDown) < 100 ) { ran--;currentMillis = millis();if (ran<=0){ran=0;} } 
      if (analogRead(keyUp)   < 100 ) { ran++;currentMillis = millis();if (ran>=32){ran=32;} }
      if (analogRead(keySelect)< 100) { currentMillis = 0;}
      if (ran<=9){lcd.setCursor(15, 1); lcd.print(L" ");}
     }
     EEPROM.put(40,ran);
     delay(300);
     currentMillis = millis();
     lcd.clear();
     lcd.setCursor(0, 0); lcd.print(L"1 Вент");
     lcd.setCursor(0, 1); lcd.print(L"2 Вент");
     while(millis()-currentMillis<=loopTime){
      lcd.setCursor(7, 0); lcd.print(dimer1);
      delay(100);
      if (analogRead(keyDown) < 100 ) { dimer1--;currentMillis = millis();if (dimer1<=0){dimer1=0;} } 
      if (analogRead(keyUp)   < 100 ) { dimer1++;currentMillis = millis();if (dimer1>=99){dimer1=99;} }
      if (analogRead(keySelect)< 100) { currentMillis = 0;}
      if (dimer1<=9){lcd.setCursor(8, 0); lcd.print(L" ");}
      maping();
     }
     EEPROM.put(70,dimer1);
     delay(300);
     currentMillis = millis();
     while(millis()-currentMillis<=loopTime)
     {
      lcd.setCursor(7, 1); lcd.print(dimer2);
      delay(100);
      if (analogRead(keyDown) < 100 ) { dimer2--;currentMillis = millis();if (dimer2<=0){dimer2=0;} } 
      if (analogRead(keyUp)   < 100 ) { dimer2++;currentMillis = millis();if (dimer2>=99){dimer2=99;} }
      if (analogRead(keySelect)< 100) { currentMillis = 0;}
      if (dimer2<=9){lcd.setCursor(8, 1); lcd.print(L" ");}
      maping();
     }
     EEPROM.put(80,dimer2);
     delay(300);
     currentMillis = millis();
     lcd.clear();
     lcd.setCursor(3, 0); lcd.print(L"НАБОР ВОДИ");
     while(millis()-currentMillis<=loopTime){
      lcd.setCursor(3, 1); lcd.print(water*10);
      delay(100);
      if (analogRead(keyDown) < 100 ) { water--;currentMillis = millis();if (water<=0){water=0;} } 
      if (analogRead(keyUp)   < 100 ) { water++;currentMillis = millis();if (water>=100){water=100;} }
      if (analogRead(keySelect)< 100) { currentMillis = 0;}
      if (dimer1<=9){lcd.setCursor(5, 1); lcd.print(L" ");}
      if (dimer1<=99){lcd.setCursor(6, 1); lcd.print(L" ");}
     }
     EEPROM.put(90,water);
     delay(300);
     currentMillis = millis();
     lcd.clear();
     }
     
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void maping(){
  dimmer1 = map(dimer1, 99, 0, 100, 9300);
  dimmer2 = map(dimer2, 99, 0, 100, 9300);
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void sensor(){ 
  tempk=tempu;
  sensors.setWaitForConversion(false); 
  sensors.requestTemperatures();
  tempu=sensors.getTempCByIndex(0);if (-0.5<=tempu-tempk && tempu-tempk<=0.5){tempu=tempk;}temp=tempu;
  if(tempu>maximym){maximym=tempu;EEPROM.put(50,maximym);}
  if(tempu<minimym && tempu!=-127){minimym=tempu;EEPROM.put(60,minimym);}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void eho(){
  digitalWrite(PIN_TRIG, LOW);
  if ((flag==0)and(micros()-micrus>=5)){
    digitalWrite(PIN_TRIG, HIGH);
    micrus=micros();
    flag=1;
  }
  if ((flag==1)and(micros()-micrus>=10)){
    digitalWrite(PIN_TRIG, LOW);
    micrus=micros();
    flag=0;
  }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void loop() 
{  
maping();
sensor();
glavnoe();
rychn();
avtomat();
onrele(); 
menu(); 
delay(100);  
}
      
